<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ticketSolder.model.dao.mysql.CancelDao">

    <resultMap type="CanceledTransactionInfo" id="canceledTransactionMap">
        <id property="transactionId" column="transactionId"/>
        <result property="userName" column="userName"/>
        <result property="password" column="password"/>
        <result property="round" column="round"/>
        <result property="passengers" column="passengers"/>
        <collection property="canceledSegmentInfoList" ofType="CanceledSegmentInfo">
            <result property="startDate" column="startDate"/>
            <result property="startTime" column="startTime"/>
            <result property="startStation" column="startStation"/>
            <result property="endStation" column="endStation"/>
            <result property="segmentNumber" column="segmentNumber"/>
            <result property="fast" column="fast"/>
        </collection>
    </resultMap>

    <select id="getStartTime" resultType="java.sql.Time">
        SELECT
        <if test="direction == true">
            S.A
        </if>
        <if test="direction == false">
            S.Z
        </if>
        FROM traininfo as TI,
        <if test="fast == true">
            fastschedule as S
        </if>
        <if test="fast == false">
            slowschedule as S
        </if>
        WHERE TI.trainID = S.trainID
        AND TI.trainName = #{trainName}
    </select>

    <update id="cancelTrain">
        UPDATE ticketamount as TA
        JOIN traininfo as TI on TI.trainID = TA.trainID
        SET TA.canceled = TRUE
        WHERE TI.trainName = #{trainName}
        AND TA.date = #{date}
        AND TA.canceled = FALSE;
    </update>

    <select id="findTransactions" resultMap="canceledTransactionMap">
        SELECT
          T.transactionId       AS transaction,
          U.userName            AS userName,
          U.password            AS password,
          T.round               AS round,
          T.passengers          AS passengers,
          S.DAY                 AS startDate,
          S.startTime           AS startTime,
          S.startStation        AS startStation,
          S.endStation          AS endStation,
          S.segmentNumber       AS segmentNumber,
          S.fast                AS fast
        FROM transaction as T, segment as S, user as U
        WHERE T.transactionId = S.transactionId
        AND T.userId = U.userId
        AND T.transactionId IN
        SELECT DISTINCT transactionId
        FROM segment
        WHERE trainName = #{trainName}
        AND day = #{date}
    </select>

    <update id="cancelTickets">
        UPDATE transaction
        SET canceled = TRUE
        WHERE transactionId
        IN (
        <foreach collection="transactionIds" item="transactionId" index="index" separator=",">
            #{transactionId}
        </foreach>
        );
    </update>

</mapper>